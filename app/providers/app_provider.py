from fastapi.middleware.cors import CORSMiddleware

from app.providers.database import db
from app.providers.provider import Provider
from config.config import settings


class AppProvider(Provider):

    def register(self):
        self.app.debug = settings.DEBUG
        self.app.title = settings.NAME

        self.add_global_middleware()

        self.register_event()

    def add_global_middleware(self):
        """
        注册全局中间件
        """
        self.app.add_middleware(
            CORSMiddleware,
            allow_origins=["*"],
            allow_credentials=True,
            allow_methods=["*"],
            allow_headers=["*"],
        )

    def register_event(self):
        app = self.app

        # This hook ensures that a connection is opened to handle any queries
        # generated by the request.
        @app.on_event("startup")
        def startup():
            db.connect()

        # This hook ensures that the connection is closed when we've finished
        # processing the request.
        @app.on_event("shutdown")
        def shutdown():
            if not db.is_closed():
                db.close()
